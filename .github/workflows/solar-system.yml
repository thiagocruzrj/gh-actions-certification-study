name: Solar System Workflow

on:
  push:
    branches:
      - main
      - 'feat/*'

env:
  MONGO_URI: 'mongodb+srv://cluster0.9inhs2g.mongodb.net/superdata'
  REGISTRY_LOGIN_SERVER: ghacr-caagerfsb6dtg6e3.azurecr.io
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit-testing:
    name: Unit Testing
    services:
      mongo:
        image: siddharth67/mongo-db:non-prod
        ports:
        - 27017:27017
    env:
        MONGO_URI: 'mongodb://localhost:27017/superData'
        MONGO_USERNAME: non-prod-user
        MONGO_PASSWORD: non-prod-password
    strategy:
        matrix:
            node-version: [18]
            operating-system: [ubuntu-latest]
            # exclude:
            #     - node-version: 20
            #       operating-system: windows-latest
    runs-on: ${{ matrix.operating-system }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js - ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        id: npm_test
        run: npm test

      - name: Archive test report
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Report-${{ matrix.operating-system }}-Node-${{ matrix.node-version }}
          path: test-results.xml
    
  code-coverage:
    name: Code Coverage
    container:
      image: node:18
    services:
      mongo:
        image: siddharth67/mongo-db:non-prod
        options: --name mongo
    env:
        MONGO_URI: 'mongodb://mongo:27017/superData'
        MONGO_USERNAME: non-prod-user
        MONGO_PASSWORD: non-prod-password
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

    #   - name: Set up Node.js - 18
    #     uses: actions/setup-node@v3
    #     with:
    #       node-version: '18'

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }} 

      - name: Install dependencies
        run: npm install

      - name: Run code coverage
        continue-on-error: true
        run: npm run coverage

      - name: Upload artifacts - Code Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Report
          path: coverage
          retention-days: 5

  docker-build-and-push:
    name: Docker Build and Push to ACR
    needs: [unit-testing, code-coverage]
    runs-on: ubuntu-latest
    permissions:
        packages: write
        id-token: write
        contents: read
    steps:
      - name: Azure login
        uses: azure/docker-login@v2
        with:
          login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: GHRG login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Build for Testing
        uses: docker/build-push-action@v5
        with:
            push: false
            tags: ${{ env.REGISTRY_LOGIN_SERVER }}/solar-system:${{ github.sha }}
            file: Dockerfile
      
      - name: Docker Image Test
        run: |
          docker images
          docker run --name solar-system-app -d -p 3000:3000 \
            -e MONGO_URI=${{ env.MONGO_URI }} \
            -e MONGO_USERNAME=${{ env.MONGO_USERNAME }} \
            -e MONGO_PASSWORD=${{ env.MONGO_PASSWORD }} \
            ${{ env.REGISTRY_LOGIN_SERVER }}/solar-system:${{ github.sha }}

          echo "Testing Image URL using wget"
          wget -q -O - 127.0.0.1:3000/live | grep live

      - name: Container Registry Push
        uses: docker/build-push-action@v5
        with:
            push: true
            file: Dockerfile
            tags: |
                ${{ env.REGISTRY_LOGIN_SERVER }}/solar-system:${{ github.sha }}
                ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}
  
  dev-deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - uses: azure/aks-set-context@v4
        with:
          resource-group: 'rg-gh-cert'
          cluster-name: 'aks-gh-cert'
      
      - name: Install Kubectl CLI
        uses: azure/setup-kubectl@v3
      
      - name: Fetch Kubernetes Cluster details
        run: |
          kubectl cluster-info
          echo --------------------------------------
          kubectl get nodes -o wide
      
      - name: Save NGINX Ingress Controller IP as GH Env Variable
        id: save-ingress-ip
        run: |
          echo "INGRESS_IP=$(kubectl -n ingress-nginx get svc ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}")" >> $GITHUB_ENV

      - name: Replace Tokens in Manifest files
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '_{_'
          tokenSuffix: '_}_'
          files: '["kubernetes/deployment/*.yaml"]'
        env:
          NAMESPACE: ${{ vars.NAMESPACE }}
          REPLICAS: ${{ vars.REPLICAS }}
          IMAGE: ${{ env.REGISTRY_LOGIN_SERVER }}/solar-system:${{ github.sha }}
          INGRESS_IP: ${{ env.INGRESS_IP }}

      - name: Display Manifest files
        run: |
          cat kubernetes/deployment/*.yaml
      # - name: Deploy to AKS
      #   id: deploy-aks
      #   uses: Azure/k8s-deploy@v4
      #   with:
      #     namespace: 'solar-system'
      #     manifests: |
      #       kubernetes/deployment/deployment.yaml
      #       kubernetes/deployment/service.yaml
      #       kubernetes/deployment/ingress.yaml
      #     images: ${{ env.REGISTRY_LOGIN_SERVER }}/solar-system:${{ github.sha }}
      #     pull-images: false