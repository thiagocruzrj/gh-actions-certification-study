name: Solar System Workflow

on:
  push:
    branches:
      - main
      - 'feat/*'

env:
  MONGO_URI: 'mongodb+srv://cluster0.9inhs2g.mongodb.net/superdata'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

permissions:
  id-token: write
  contents: read
jobs:
  unit-testing:
    name: Unit Testing
    strategy:
        matrix:
            node-version: [18]
            operating-system: [ubuntu-latest]
            # exclude:
            #     - node-version: 20
            #       operating-system: windows-latest
    runs-on: ${{ matrix.operating-system }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js - ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        id: npm_test
        run: npm test

      - name: Archive test report
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Report-${{ matrix.operating-system }}-Node-${{ matrix.node-version }}
          path: test-results.xml
    
  code-coverage:
    name: Code Coverage
    needs: unit-testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js - 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }} 

      - name: Install dependencies
        run: npm install

      - name: Run code coverage
        continue-on-error: true
        run: npm run coverage

      - name: Upload artifacts - Code Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Report
          path: coverage
          retention-days: 5

  docker-build-and-push:
    name: Docker Build and Push to ACR
    needs: [unit-testing, code-coverage]
    runs-on: ubuntu-latest
    steps:
      - name: Azure login
        uses: azure/docker-login@v2
        with:
          login-server: ${{ vars.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Docker Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: ${{ vars.REGISTRY_LOGIN_SERVER }}/solar-system:${{ github.sha }}
      
      - name: Docker Image Test
        run: |
          docker images
          docker run --name solar-system-app -d -p 3000:3000 \
            -e MONGO_URI=${{ env.MONGO_URI }} \
            -e MONGO_USERNAME=${{ env.MONGO_USERNAME }} \
            -e MONGO_PASSWORD=${{ env.MONGO_PASSWORD }} \
            ${{ vars.REGISTRY_LOGIN_SERVER }}/solar-system:${{ github.sha }}

          echo "Testing Image URL using wget"
          wget -q -O - 127.0.0.1:3000/live | grep live