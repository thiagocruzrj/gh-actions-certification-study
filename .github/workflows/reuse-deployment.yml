name: Deployment - Reusable Workflow

on:
  workflow_call:
    secrets:
      AZURE_CREDENTIALS:
        required: true
      MONGO_PASSWORD:
        required: true
      GITHUB_TOKEN:
        required: true
    inputs:
        MONGO_URI:
            required: false
            type: string
            default: ${{ vars.MONGO_URI }}
        ENV:
            description: 'The environment to deploy to'
            required: true
            type: string
            default: development
        REGISTRY_LOGIN_SERVER:
            required: true
            type: string
            default: ${{ vars.REGISTRY_LOGIN_SERVER }}

jobs:
    reuse-deploy:
        runs-on: ubuntu-latest
        environment: 
          name: ${{ inputs.ENV }}
          url: https://${{ steps.save-app-url.outputs.APP_INGRESS_HOST }}
        outputs:
            APP_INGRESS_HOST: ${{ steps.save-app-url.outputs.APP_INGRESS_HOST }}
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Azure login
            uses: azure/login@v1
            with:
              creds: ${{ secrets.AZURE_CREDENTIALS }}
        
          - name: Install Kubectl CLI
            uses: azure/setup-kubectl@v3
        
          - name: Setup kubelogin
            uses: azure/use-kubelogin@v1
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          - uses: azure/aks-set-context@v4
            with:
              resource-group: 'rg-gh-cert'
              cluster-name: 'aks-gh-cert'
              admin: 'false'
              use-kubelogin: 'true'

          - name: Fetch Kubernetes Cluster details
            run: |
              kubectl cluster-info
              echo --------------------------------------
              kubectl get nodes -o wide
        
          - name: Save NGINX Ingress Controller IP as GH Env Variable
            id: save-ingress-ip
            run: |
              echo "INGRESS_IP=$(kubectl -n ingress-nginx get svc ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}")" >> $GITHUB_ENV

          - name: Replace Tokens in Manifest files
            uses: cschleiden/replace-tokens@v1
            with:
              tokenPrefix: '_{_'
              tokenSuffix: '_}_'
              files: '["kubernetes/${{ inputs.ENV }}/*.yaml"]'
            env:
              NAMESPACE: ${{ vars.NAMESPACE }}
              REPLICAS: ${{ vars.REPLICAS }}
              IMAGE: ${{ inputs.REGISTRY_LOGIN_SERVER }}/solar-system:${{ github.sha }}
              INGRESS_IP: ${{ env.INGRESS_IP }}

          - name: Create MongoDB Secret in AKS
            run: |
              kubectl create namespace ${{ vars.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
              kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
                --from-literal=mongo-uri='${{ inputs.MONGO_URI }}' \
                --from-literal=mongo-username='${{ vars.MONGO_USERNAME }}' \
                --from-literal=mongo-password='${{ secrets.MONGO_PASSWORD }}' \
                --dry-run=client -o yaml | kubectl apply -f -
        
          - name: Deploy to AKS
            id: deploy-aks
            uses: Azure/k8s-deploy@v5
            with:
              action: deploy
              namespace: ${{ vars.NAMESPACE }}
              manifests: |
                kubernetes/${{ inputs.ENV }}/deployment.yaml
                kubernetes/${{ inputs.ENV }}/service.yaml
                kubernetes/${{ inputs.ENV }}/ingress.yaml
              images: ${{ inputs.REGISTRY_LOGIN_SERVER }}/solar-system:${{ github.sha }}
              pull-images: false

          - name: Set App Ingress Host URL as GH Env Variable
            id: save-app-url
            run: |
              echo "APP_INGRESS_HOST=$(kubectl -n ${{ vars.NAMESPACE }} get ingress -o jsonpath="{.items[0].spec.tls[0].hosts[0]}")" >> "$GITHUB_OUTPUT"